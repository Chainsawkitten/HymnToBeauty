#pragma once

#include "../Interface/Shader.hpp"

#include <glad/glad.h>
#include <ShaderProcessor/ShaderSource.hpp>

namespace Video {

/// OpenGL implementation of Shader.
class OpenGLShader : public Shader {
  public:
    /// Create new OpenGL shader.
    /**
     * @param shaderSource The source of the shader, generated by the shader processor.
     * @param type The type of shader to create.
     */
    OpenGLShader(const ShaderSource& shaderSource, Type type);

    /// Destructor.
    ~OpenGLShader() final;

    /// Get shader ID.
    /**
     * Used when linking a ShaderProgram.
     * @return Shader identifier
     */
    GLuint GetShaderID() const;

    /// Get reflection info.
    /**
     * @return The reflection info generated by the shader processor.
     */
    const ShaderSource::ReflectionInfo& GetReflectionInfo() const;

  private:
    OpenGLShader(const OpenGLShader& other) = delete;

    GLuint shader;

    ShaderSource::ReflectionInfo reflectionInfo;
};

}
